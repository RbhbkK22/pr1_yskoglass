<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>